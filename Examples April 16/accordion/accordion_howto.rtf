{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs36 \cf0 Pure CSS accordion menu \
\
Let\'92s start by taking a look at the basic HTML markup. \
\
So the markup here uses checkboxes, which is a type of form field. We haven\'92t done much with form fields but they\'92re usually in two formats, one being the \'93input\'94 which takes a type based on its attribute, in this case: \
\
type=\'93checkbox\'94 \
\
and then a \'93label\'94 tag which will put the title information next to it, using a special attribute \'93for,\'94 like so: \
\
<label for=\'93ac-1\'94>About us</label>  \
\
Each individual input has an ID which is used in the \'93for\'94 attribute, which we use to check the checkbox when clicking the label. There\'92s also a class attribute set on the article, for the size of the expansion. \
\
The way that this demo will work is that it will expand if the attribute is checked. We can set a \'93checked\'94 value, which is boolean (it is or it isn\'92t) in the initial html code, we\'92ll set that on the initial input value: \
\
<input id="ac-1" name="accordion-1" type="checkbox" 
\b checked
\b0  /> \
\
If we don\'92t \
\
So there\'92s some basic css set here, just for the fonts being a bit nicer. \
\
Let\'92s start by defining a width for the accordion and centering it. (You can set this a bunch of ways, here it\'92s just going to be centered on the page.) \
\
.ac-container\{\
	width: 400px;\
	margin: 10px auto 30px auto;\
\}\
\
Next we want to style up the label a bit. Let\'92s change the font, add some padding, make it clickable throughout with the display:block command, and then add some other stuff. The only thing unfamiliar is probably the cursor:pointer command. \
\
.ac-container label\{\
	font-family: Helvetica, Arial, sans-serif;\
	padding: 5px 20px;\
	z-index: 20;    //this sets the label to be overlaid on content  \
	display: block;\
	height: 30px;\
	cursor: pointer;\
	color: #777;\
    background-color: lightgreen;\
    border: 1px solid black; \
	font-size: 1.5em;\
\}\
\
Then we can white out the label on hover: \
\
.ac-container label:hover\{\
	background: #fff;\
\}\
\
Now the next thing we want to do is to have the label color change when the box is checked. This will work on mobile or desktop both, of course. The plus sign is technically called the adjacent sibling combinator \'97 what it does is select the thing that\'92s directly adjacent to its sibling, in this case the input and label. \
\
.ac-container input:checked + label,\
.ac-container input:checked + label:hover\{\
	background: #c6e1ec;\
	color: #3d7489;\
\}\
\
We don\'92t want the inputs to actually show, so we\'92ll hide them: \
\
.ac-container input\{\
	display: none;\
\}\
\
now if you click on them, you can see that they check and uncheck but the change we see is the background of the label. \
\
We\'92ll set the initial size of everything to zero: \
\
.ac-container article\{\
	background: rgba(255, 255, 255, 0.5);\
	margin-top: -1px;\
	overflow: hidden;\
	height: 0px;\
	position: relative;\
	z-index: 10;\
	\
\}\
\
And then we\'92re going to add a little transition to the opening (talk about what a transition is)  \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 .ac-container article\{\
	transition:\
		height 0.3s ease-in-out,\
		box-shadow 0.6s linear;\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \}\
\
And then we\'92ll add in some code for the closing: \
\
.ac-container input:checked ~ article\{\
	transition:\
		height 0.5s ease-in-out,\
		box-shadow 0.1s linear;\
	box-shadow: 0px 0px 0px 1px rgba(155,155,155,0.3);\
\}\
\
Now keep in mind that won\'92t actually do anything yet! We need to tell the CSS to change the size of the article classes when the input is checked. To do that, we\'92re going to set a \'93small,\'94 \'93medium\'94 and \'93large\'94 class on our items. This is really kind of janky, to be honest, but the other way to detect the file sizes would be to use Javascript which we do not know how to do yet. I just set arbitrary heights based o the content. Also, the tilde symbol (~) allows me to select elements that are in a sequence of simple selectors. \
\
.ac-container input:checked ~ article.ac-small\{\
	height: 140px;\
\}\
.ac-container input:checked ~ article.ac-medium\{\
	height: 180px;\
\}\
.ac-container input:checked ~ article.ac-large\{\
	height: 230px;\
\}\
\
So now we can click through those and see the magic of the accordion happening. \
\
And we can polish this up just a bit by adding a touch of padding: \
\
p \{padding: 10px\}\
\
but this is the basic concept that we have. We can also play around with the \'93checked\'94 attribute we mentioned above \'97 the question is whether you want any part of it shown by default. \
}